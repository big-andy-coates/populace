/*
 * Copyright (c) 2015 Andrew Coates
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

buildscript {
    repositories {
        mavenCentral()
    }

    //noinspection GroovyAssignabilityCheck
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
    }
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
        vcs = 'Git'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'maven'

    group = "com.github.datalorax.populace"
    version = "1.1.0"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    //noinspection GroovyAssignabilityCheck
    dependencies {
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
        compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
        compile 'com.google.guava:guava:18.0'

        testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.+'
        testCompile 'org.testng:testng:6.8.+'
        testCompile 'org.mockito:mockito-all:1.10.+'
        testCompile 'com.google.guava:guava-testlib:18.+'
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
        options.compilerArgs << "-Xlint:deprecation"
    }

    //noinspection GroovyAssignabilityCheck
    test {
        useTestNG()

        testLogging {
            events = ["skipped", "failed"]

            displayGranularity = 3
        }
    }

    jar.dependsOn test
    jar.dependsOn javadoc

    task javaDocJar(type: Jar, dependsOn: 'javadoc') {
        from javadoc.destinationDir
        classifier = 'javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javaDocJar
        archives sourcesJar
    }

    apply from: "${rootProject.projectDir}/release.gradle"
}

apply from: "${rootProject.projectDir}/coverage.gradle"

defaultTasks 'clean', 'jar'
